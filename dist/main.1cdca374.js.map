{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastList","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","addImg","match","simplifyUrl","replace","render","index","slice","forEach","node","$li","insertBefore","on","e","preventDefault","splice","children","get","remove","prompt","indexOf","push","toUpperCase","location","reload","window","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase","open"],"mappings":"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","file":"main.1cdca374.js","sourceRoot":"..\\src","sourcesContent":["const $siteList = $(\".site-list\");\r\nconst $lastList = $siteList.find(\"li.last\");\r\nconst x = localStorage.getItem(\"x\");\r\nconst xObject = JSON.parse(x);\r\nlet hashMap = xObject || [\r\n  { logo: \"G\", url: \"https://github.com\" },\r\n  { logo: \"W\", url: \"https://wangdoc.com\" },\r\n  { logo: \"./images/bilibili.png\", url: \"https://bilibili.com\" },\r\n];\r\n\r\nconst addImg = (logo) => {\r\n  if (logo.match(/png|jpg/)) {\r\n    return `<img src=\"${logo}\" alt=\"\"></img>`;\r\n  } else {\r\n    return logo[0];\r\n  }\r\n};\r\n\r\nconst simplifyUrl = (url) => {\r\n  return url\r\n    .replace(\"https://\", \"\")\r\n    .replace(\"http://\", \"\")\r\n    .replace(\"www.\", \"\")\r\n    .replace(/\\/.*/, \"\");\r\n};\r\n\r\n// const render = () => {\r\n//   $siteList.find('li:not(.last)').remove()\r\n//   hashMap.forEach((node, index) => {\r\n//     const $li = $(`<li>\r\n//       <div class=\"site\">\r\n//         <div class=\"logo\">${node.logo}</div>\r\n//         <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n//         <div class=\"close\">\r\n//           <svg class=\"icon\">\r\n//             <use xlink:href=\"#icon-close\"></use>\r\n//           </svg>\r\n//         </div>\r\n//       </div>\r\n//     </li>`).insertBefore($lastLi)\r\n//     $li.on('click', () => {\r\n//       window.open(node.url)\r\n//     })\r\n//     $li.on('click', '.close', (e) => {\r\n//       e.stopPropagation() // 阻止冒泡\r\n//       hashMap.splice(index, 1)\r\n//       render()\r\n//     })\r\n//   })\r\n// }\r\n\r\nconst render = (index) => {\r\n  hashMap.slice(index).forEach((node, index) => {\r\n    const $li = $(`<li>\r\n      <div class=\"wrapper\">\r\n        <a href=\"${node.url}\">\r\n          <div class=\"site\">\r\n            <div class=\"logo\">${addImg(node.logo)}</div>\r\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n            <div class=\"close\">\r\n              <svg class=\"icon icon2\" aria-hidden=\"true\">\r\n                <use xlink:href=\"#icon-close\"></use>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </a>\r\n        </div>\r\n      </li>`).insertBefore($lastList);\r\n    $li.on(\"click\", \".close\", (e) => {\r\n      e.preventDefault();\r\n      hashMap.splice(index, 1);\r\n      $siteList.children().get(index).remove();\r\n    });\r\n  });\r\n};\r\n\r\nrender(0);\r\n\r\n$(\".add-button\").on(\"click\", () => {\r\n  let url = prompt(\"请输入您想添加的网址\");\r\n  if (url && url.indexOf(\"http\") !== 0) {\r\n    url = \"https://\" + url;\r\n    hashMap.push({\r\n      logo: simplifyUrl(url)[0].toUpperCase(),\r\n      url: url,\r\n    });\r\n    render(-1);\r\n    location.reload();\r\n  } else if (url) {\r\n    hashMap.push({\r\n      logo: simplifyUrl(url)[0].toUpperCase(),\r\n      url: url,\r\n    });\r\n    render(-1);\r\n    location.reload();\r\n  }\r\n});\r\n\r\nwindow.onbeforeunload = () => {\r\n  const string = JSON.stringify(hashMap);\r\n  localStorage.setItem(\"x\", string);\r\n};\r\n\r\n$(document).on(\"keypress\", (e) => {\r\n  // const key = e.key;  equal to\r\n  const { key } = e;\r\n  for (let i = 0; i < hashMap.length; i++) {\r\n    if (hashMap[i].logo.toLowerCase() === key) {\r\n      window.open(hashMap[i].url, \"_self\");\r\n      //在当前页面打开新窗口\r\n    }\r\n  }\r\n});\r\n"]}